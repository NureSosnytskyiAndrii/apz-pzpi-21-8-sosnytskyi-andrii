МЕТА РОБОТИ

Метою цієї лабораторної роботи є розробка програмного забезпечення для IoT пристрою, створеного на базі будь-якої поширеної на сьогодні платформи, придатної для реалізації вбудованих систем (Embedded System) для проєкту за темою «Програмна система для моніторингу місцеположення та фізіологічних показників спеціальних служб у реальному часі з метою забезпечення безпеки та ефективності у виконанні завдань».

ХІД РОБОТИ

У ході цієї лабораторної роботи була створена IoT частина системи для застосунку моніторингу місцеположення та фізіологічних показників спеціальних служб у реальному часі з метою забезпечення безпеки та ефективності у виконанні завдань «SafetyShield». IoT частина програмної системи була розроблена в середовищі розробки Arduino IDE на мові програмування C++. Для взаємодії пристрою з іншими компонентами системи та відправки даних на серверну частину було використано середовище Node Red.

1 БУДОВА ПРИСТРОЮ

IoT пристрій складається з мікроконтролера Arduino UNO, датчика NEO-6M для отримання координат GPS, а також із датчика MAX30102 для зчитування частоти серцевих скорочень.
На рисунку 1.1 зображено будову пристрою в поєднанні з датчиком NEO-6M для зчитування місцеположення.
Рисунок 1.1 – Будова пристрою в поєднанні із датчиком зчитування місцеположення
На рисунку 1.2 зображено будову пристрою в поєднанні з датчиком MAX30102 для зчитування частоти серцевих скорочень.
Рисунок 1.2 – Будова пристрою в поєднанні із датчиком зчитування частоти серцевих скорочень
Для отримання поточного місцеположення та частоти пульсу дані з обох датчиків збираються кожні 5 секунд. Далі вони приводяться до JSON-формату та  передаються за протоколом https на серверну частину програмної системи. Після кожного запиту до серверної частини пристрій отримує статус про запис даних, що відображається за допомогою консолі. Ідея архітектури полягає в тому, що спочатку ми підключаємо необхідний датчик до мікроконтролера, і він починає передавати дані в Serial Monitor. Після цього ми запускаємо локальний сервер Node Red, що зчитує дані з COM-порту, що вже приведені до правильної форми, та передає ці дані на серверну частину, де відбувається їх перевірка, обробка та запис в базу даних. Код для отримання місцеположення наведений в додатку В. Код для виміру частоти пульсу в додатку Г.

2 ДІАГРАМА ПРЕЦЕДЕНТІВ

На рисунку 2.1 зображено діаграму прецедентів, на якій відображено моделювання поведінки між користувачем та IoT пристроєм.
Рисунок 2.1 – UML діаграма прецедентів користувача пристрою
На цій діаграмі відображено всі необхідні дії користувача для взаємодії з IoT пристроєм, а також відображено процес передачі зчитаних з пристрою даних (дані про місцеположення користувача та його показники пульсу) на серверну частину.

3 ДІАГРАМА ВЗАЄМОДІЇ

На рисунку 3.1 зображено діаграму взаємодії користувача та необхідного приладу для виявлення місцеположення користувача та виміру частоти серцевих скорочень.
Рисунок 3.1 – Діаграма взаємодії користувача з IoT пристроєм
Процес взаємодії починається з того, що користувач під’єднує пристрій. Після успішного підключення, пристрій входить в цикл, де він надсилає дані на сервер і отримує статус у відповідь: запис місцеположення користувача або запис показників серцевих скорочень. Отриманий статус відображається в консолі Node Red, що дозволяє користувачу спостерігати за актуальним станом пристрою і статусом запису даних.

4 ДІАГРАМА ДІЯЛЬНОСТІ

У додатку А на рисунку А.1 зображено діаграму діяльності для пристрою IoT.  На цій діаграмі показано, які дії відбуваються при взаємодії користувача з розумним пристроєм та дії, які відбуваються на серверній частині. Можемо бачити, що користувач спочатку вмикає пристрій, запускає сервер Node Red, далі відбувається зчитування і передача даних місцеположення та частоти пульсу цього користувача на сервер, де ці дані оброблюються та записуються у базу даних. Далі відправляється статус успішності запису даних, який відображається користувачу.

5 ДІАГРАМА СТАНІВ

У додатку Б на рисунку Б.1 зображено діаграму станів для процесу визначення місцеположення користувача та визначення частоти пульсу. По-перше, користувач вмикає пристрій, далі підключає необхідний датчик для визначення поточного місцеположення або виміру частоти пульсу, та бачить результати вимірювань  в консолі. По-друге, після того як результати вимірювань відобразилися, система відправляє дані на серверну частину та відбувається обробка цих даних та запис даних, зчитаних з датчика, в базу даних. Також відображається статус збережених даних.

ВИСНОВКИ

У даній лабораторній роботі було розроблено програмне забезпечення для IoT пристрою для проєкту за темою «Програмна система для моніторингу місцеположення та фізіологічних показників спеціальних служб у реальному часі з метою забезпечення безпеки та ефективності у виконанні завдань» в середовищі розробки Arduino IDE за допомогою мови програмування C++  із використанням мікроконтролера Arduino Uno та датчиків NEO-6M та MAX30102.
Посилання на демо-відео:
https://www.youtube.com/watch?v=IjTssBGEz50
Посилання на репозиторій GitHub:
https://github.com/NureSosnytskyiAndrii/apz-pzpi-21-8-sosnytskyi-andrii










