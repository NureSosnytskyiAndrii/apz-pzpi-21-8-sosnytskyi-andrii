МЕТА РОБОТИ

Метою цієї лабораторної роботи є розробка клієнтської (front-end) частини для проекту за темою «Програмна система для моніторингу місцеположення та фізіологічних показників спеціальних служб у реальному часі з метою забезпечення безпеки та ефективності у виконанні завдань». Ця частина системи повинна підтримувати роботу клієнтів у веб-режимі та забезпечувати адміністрування системи.

ХІД РОБОТИ

У ході цієї лабораторної роботи була розроблена Front-end частина застосунку для моніторингу місцеположення та фізіологічних показників спеціальних служб «SafetyShield». Вона призначена для користувачів системи та адміністраторів. Клієнтська частина була розроблена на мові програмування JavaScript з використанням бібліотеки React.js. Для зберігання токена авторизації користувача було використано Redux та sessionStorage, що зберігає дані токену в середовищі сесії та за потреби використовує його. Для зв’язку із серверною частиною програмної системи було використано технологію axios та async/await. Ці механізми дозволяють асинхронно відправляти на серверну частину запити. Для відображення широти та довготи було використано Leaflet maps. Також було додано локалізацію за допомогою i18n для англійської та української мови усього інтерфейсу клієнтської частини, а також правильне форматування дати та часу для відображення часової позначки про місцеположення та показники фізичного стану.

1 ДІАГРАМА ПРЕЦЕДЕНТІВ

На рисунку 1 зображено діаграму прецедентів для клієнтської частини програмної системи «SafetyShield». На цій діаграмі зображено основних акторів системи – користувачів, тобто службовців певної спеціальної служби (наприклад, пожежної частини, відділу поліції, військового відділу тощо) та адміністратора системи.
Рисунок 1 – Діаграма прецедентів до клієнтської частини програмної системи «SafetyShield»
На діаграмі прецедентів можемо бачити, що користувач системи може зареєструватися, авторизуватися, переглянути особистий профіль, записувати дані про місцеположення, переглядати показники особистого фізичного стану та свого місцеположення. У свою чергу адміністратор системи може авторизуватися, управляти користувачами та управляти даними: керувати спеціальними службами та службовцями, а також переглядати параметри спеціальних служб та службовців: місцеположення кожного службовця, стани службовців та показники фізичного стану із датчиків.

2 ДІАГРАМА КОМПОНЕНТІВ

У додатку А на рисунку А.1 зображено діаграму компонентів. На цій діаграмі вказана взаємодія між основними компонентами програмної системи – клієнтською частиною та серверною частиною. Можемо бачити, що кліентська частина містить основні компоненти – Admin, Login, Register, User, PhysicalState, UserMap, Official, через які здійснюється взаємодія з серверною частиною, а також основний компонент App.js, що відповідає за маршрутизацію та відображення зазначених компонентів у браузері.

3 ДІАГРАМА ВЗАЄМОДІЇ

У додатку Б на рисунку Б.1 зображено діаграму взаємодії для процесу визначення поточного місцеположення службовця та зчитування даних з датчика місцеположення. На діаграмі можемо бачити, що користувач має спочатку авторизуватися в системі, далі він має додати дані про визначення місцеположення і після цього дані, отримані з датчика, будуть відображені для цього користувача за допомогою інтерактивної мапи.

4 ДІАГРАМА СТАНІВ

У додатку В на рисунку В.1 зображено діаграму станів до клієнтської частини програмної системи «SafetyShield», а саме процес отримання даних про місцеположення конкретного службовця та його фізичних показників: тиску, температури, пульсу. На цій діаграмі можемо бачити, що користувач має спочатку увійти до системи, далі він може перейти на сторінку особистого профілю або перейти на головну сторінку, переглянути зчитані координати за допомогою датчика місцеположення, або перейти на сторінку зчитання даних з датчика пульсу, температури, тиску. Після цього користувач окремо може переглядати виміряні фізичні показники.

5 АРХІТЕКТУРА КЛІЄНТСЬКОЇ ЧАСТИНИ

Для архітектури клієнтської частини програмної системи було використано стандартну архітектуру проекту бібліотек React.js, де є такі директорії як public та src, файли App.js та package.json. Також була створена директорія components для зберігання усіх компонентів.
У додатку Г на рисунку Г.1 зображено структуру клієнтської частини програмної системи «SafetyShield». Можемо бачити, що головною директорією є src, в ній є директорії assets, де зберігаються json-файли для української та англійської локалізації. В директорії components/navbar зберігаються компоненти навігації, такі як Login, Register, Home, Admin. У директорії user/interfaces знаходяться компоненти інтерфейсу користувача: відображення широти і довготи на мапі, відображення профілю користувача, показників фізичного стану.
Також в директорії admin зберігаються компоненти, що відповідають за роботу з панеллю адміністратора, а саме перегляд усіх даних, видалення, оновлення та редагування даних. В директорії translation зберігається файл i18n.js, що відповідає за підключення бібліотеки i18n для забезпечення локалізації української та англійської мов а також зберігання поточного перекладу в cookies браузера. Код компоненту Register наведений в додатку Д. Код компоненту Login наведений в додатку Е. Код для отримання адміністратором даних про місцеположення конкретного службовця наведений в додатку Ж. Код для відображень показників широти та довготи, отриманих з датчика місцеположення наведений в додатку И.

ВИСНОВКИ

У даній лабораторній роботі було створено клієнтську (front-end) частину програмної системи за темою «Програмна система для моніторингу місцеположення та фізіологічних показників спеціальних служб у реальному часі з метою забезпечення безпеки та ефективності у виконанні завдань» з використанням бібліотеки React.js.
За допомогою Redux та sessionStorage було створено механізм авторизації користувача. Також за допомогою http запитів та бібліотеки axios усі компоненти front-end частини було пов’язано з back-end частиною. Було додано локалізацію інтерфейсу для англійської та української мов.
Посилання на демо-відео:
https://youtu.be/AKygqJf5nfA
Посилання на репозиторій GitHub:
https://github.com/NureSosnytskyiAndrii/apz-pzpi-21-8-sosnytskyi-andrii
