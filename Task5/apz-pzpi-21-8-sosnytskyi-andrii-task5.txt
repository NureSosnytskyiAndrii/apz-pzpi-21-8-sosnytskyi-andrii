МЕТА РОБОТИ

Метою цієї лабораторної роботи є розробка мобільного програмного   застосунку для будь-якої поширеної на сьогодні мобільної платформи. Мобільний застосунок повинен бути частиною системи і повинен взаємодіяти  з нею.

ХІД РОБОТИ

У ході цієї лабораторної роботи була розроблена mobile частина програмної для моніторингу місцеположення та фізіологічних показників спеціальних служб «SafetyShield». Вона призначена для моніторингу фізичних показників користувачів. Мобільний застосунок був розроблений на мові програмування Kotlin в середовищі Android Studio з використанням технології Kotlin Retrofit для взаємодії з серверною частиною програмної системи. Для відображення даних з серверної частини було використано RecycleView. Для збереження токену авторизації було використано Encrypted Shared Preferences.

1 ДІАГРАМА ПРЕЦЕДЕНТІВ

На рисунку 1 зображено діаграму прецедентів для мобільного застосунку програмної системи «SafetyShield».
Рисунок 1 – Діаграма прецедентів до мобільного застосунку програмної системи «SafetyShield»
Можемо бачити, що користувач, що вже є службовцем певної спеціальної служби може авторизуватися в системі, далі переглядати особисті дані чи дані про свою спеціальну службу. Також він може створити запис для визначення особистого фізичного стану, під’єднати датчик та здійснити вимір фізичного показника (пульсу, температури або кров’яного тиску). Після цього службовець може переглядати зчитані дані та бачити попередження про порушення свого стану при певній екстремальній ситуації.

2 ДІАГРАМА КОМПОНЕНТІВ

На рисунку 2 зображено діаграму компонентів. На цій діаграмі вказана взаємодія між компонентами програмної системи – мобільним застосунком та серверною частиною.
Рисунок 2 – Діаграма компонентів для мобільного застосунку програмної системи «SafetyShield»
На діаграмі зображено взаємодію мобільного застосунку із серверною частиною. Користувач взаємодіє із застосунком через UI , яке у свою чергу викликає методи у ViewModel для отримання або надсилання даних. ViewModel звертається до Repository. Repository використовує Retrofit (Remote Data Source) для надсилання HTTP-запитів до сервера. На сервері компонент API Controller формує відповідь і надсилає її після обробки назад на мобільний застосунок, або здійснюється запис даних до бази даних.

3 ДІАГРАМА ВЗАЄМОДІЇ

У додатку А на рисунку А.1 зображено діаграму взаємодії для процесу реєстрації в мобільному застосунку нового користувача, його вхід в акаунт, а також процесу зчитування та відображення показників фізичного стану службовця спеціальної служби (пульс, температура тощо).

4 ДІАГРАМА СТАНІВ

У додатку Б на рисунку Б.1 зображено діаграму станів до мобільного застосунку програмної системи «SafetyShield», а саме для процесу отримання інформації про профіль службовця та спецслужби де він працює, а також процес здійснення та відбраження виміру показників фізичного стану, таких як пульс, температура, та відображення стану конкретного службовця після здійснення виміру цих показників.

5 АРХІТЕКТУРА КЛІЄНТСЬКОЇ ЧАСТИНИ

Для архітектури клієнтської частини програмної системи було використано архітектуру Android-застосунку із Manifest файлом, файлами розмітки Android xml, drawable, а також activities.
Проект мобільного застосунку організований за такими папками, як Activities - містить всі активності застосунку, adapters містить адаптери для RecyclerView та інших компонентів, models містить класові моделі, що представляють дані, viewmodels містить класи ViewModel для управління логікою інтерфейсу користувача, layout містить XML-файли для макетів інтерфейсу користувача, values містить XML-файли для ресурсів (рядків, кольорів, розмірів тощо), drawable містить графічні ресурси, menu містить XML-файли для меню. AndroidManifest.xml: маніфестний файл, що визначає основні налаштування застосунку, дозволи та основні компоненти (активності, сервіси тощо). Структура проекту наведена в додатку В на рисунку В.1. Приклад коду активності (Activity) наведено в додатку Г. Приклад адаптера наведено в додатку Д. Приклад ViewModel наведено в додатку Е.

ВИСНОВКИ

У даній лабораторній роботі було створено мобільний застосунок для  програмної системи за темою «Програмна система для моніторингу місцеположення та фізіологічних показників спеціальних служб у реальному часі з метою забезпечення безпеки та ефективності у виконанні завдань» з використанням мови програмування Kotlin та Retrofit.
Посилання на демо-відео:
https://youtu.be/rADjOKjMoi0
Посилання на репозиторій GitHub:
https://github.com/NureSosnytskyiAndrii/apz-pzpi-21-8-sosnytskyi-andrii
